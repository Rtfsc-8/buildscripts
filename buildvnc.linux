set -u
set -e

SCRIPTDIR=`dirname $0`

if ls $OUTDIR/files/turbovnc-[0-9]*.i386.rpm >/dev/null 2>&1 \
	|| ls $OUTDIR/files/turbovnc-[0-9]*.x86_64.rpm >/dev/null 2>&1 \
	|| ls $OUTDIR/files/turbovnc*_[0-9]*_amd64.deb >/dev/null 2>&1 \
	|| ls $OUTDIR/files/turbovnc*_[0-9]*_i386.deb >/dev/null 2>&1; then
	if [ $FORCEBINARY = 0 ]; then
		echo
		echo Binary already exists!
		echo Run $SCRIPT -fb to rebuild it.
		echo
		exit 1
	else
		rm -f $OUTDIR/files/*.i386.rpm $OUTDIR/files/*.x86_64.rpm $OUTDIR/files/*.deb
	fi
fi

exec > $OUTDIR/log-$PLATFORM.txt 2>&1

RPMARGS=
CMAKEARGS=

if [ -f $SCRIPTDIR/jarsign ]; then
	. $SCRIPTDIR/jarsign

	echo Signing JAR using official code signing certificate.

	if [ ! -z ${JAVA_KEY_ALIAS+x} ]; then
		RPMARGS=(--define "java_key_alias $JAVA_KEY_ALIAS")
		CMAKEARGS=(-DJAVA_KEY_ALIAS="$JAVA_KEY_ALIAS")
		echo JAVA_KEY_ALIAS=$JAVA_KEY_ALIAS
	else
		echo ERROR: JAVA_KEY_ALIAS must be defined
		exit 1
	fi
	if [ ! -z ${JAVA_KEYSTORE+x} ]; then
		RPMARGS=("${RPMARGS[@]}" --define "java_keystore $JAVA_KEYSTORE")
		CMAKEARGS=("${CMAKEARGS[@]}" -DJAVA_KEYSTORE="$JAVA_KEYSTORE")
		echo JAVA_KEYSTORE=$JAVA_KEYSTORE
	fi
	if [ ! -z ${JAVA_KEYSTORE_PASS+x} ]; then
		RPMARGS=("${RPMARGS[@]}" --define "java_keystore_pass $JAVA_KEYSTORE_PASS")
		CMAKEARGS=("${CMAKEARGS[@]}" -DJAVA_KEYSTORE_PASS="$JAVA_KEYSTORE_PASS")
		echo JAVA_KEYSTORE_PASS=$JAVA_KEYSTORE_PASS
	fi
	if [ ! -z ${JAVA_KEYSTORE_TYPE+x} ]; then
		RPMARGS=("${RPMARGS[@]}" --define "java_keystore_type $JAVA_KEYSTORE_TYPE")
		CMAKEARGS=("${CMAKEARGS[@]}" -DJAVA_KEYSTORE_TYPE="$JAVA_KEYSTORE_TYPE")
		echo JAVA_KEYSTORE_TYPE=$JAVA_KEYSTORE_TYPE
	fi
	if [ ! -z ${JAVA_KEY_PASS+x} ]; then
		RPMARGS=("${RPMARGS[@]}" --define "java_key_pass $JAVA_KEY_PASS")
		CMAKEARGS=("${CMAKEARGS[@]}" -DJAVA_KEY_PASS="$JAVA_KEY_PASS")
		echo JAVA_KEY_PASS=$JAVA_KEY_PASS
	fi
	if [ ! -z ${JAVA_TSA_URL+x} ]; then
		RPMARGS=("${RPMARGS[@]}" --define "java_tsa_url $JAVA_TSA_URL")
		CMAKEARGS=("${CMAKEARGS[@]}" -DJAVA_TSA_URL="$JAVA_TSA_URL")
		echo JAVA_TSA_URL=$JAVA_TSA_URL
	fi
fi

echo Creating binary RPMs ...

mkdir -p rpmbuild/RPMS
mkdir -p rpmbuild/BUILD
mkdir -p rpmbuild/SRPMS
mkdir -p rpmbuild/buildroot
export CFLAGS=
export LDFLAGS=
rpmbuild --rebuild --buildroot $TMPDIR/rpmbuild/buildroot \
	--define "_topdir $TMPDIR/rpmbuild" $OUTDIR/files/turbovnc-[0-9]*.src.rpm \
	"${RPMARGS[@]}"
VERSION=`rpm -q -p rpmbuild/RPMS/x86_64/turbovnc-[0-9]*.x86_64.rpm | cut -f2 -d-`
mv rpmbuild/RPMS/x86_64/turbovnc-[0-9]*.x86_64.rpm $OUTDIR/files/turbovnc-$VERSION.x86_64.rpm
mv rpmbuild/RPMS/x86_64/turbovnc-debuginfo-[0-9]*.x86_64.rpm $OUTDIR/files/turbovnc-debuginfo-$VERSION.x86_64.rpm

if [ -f $SCRIPTDIR/gpgsign ]; then
	. $SCRIPTDIR/gpgsign
	expect $SCRIPTDIR/rpmsign "$GPG_KEY_PASS" "$GPG_KEY_NAME" $OUTDIR/files/turbovnc-$VERSION.x86_64.rpm
	rpm --checksig $OUTDIR/files/turbovnc-$VERSION.x86_64.rpm
	expect $SCRIPTDIR/rpmsign "$GPG_KEY_PASS" "$GPG_KEY_NAME" $OUTDIR/files/turbovnc-debuginfo-$VERSION.x86_64.rpm
	rpm --checksig $OUTDIR/files/turbovnc-debuginfo-$VERSION.x86_64.rpm
fi

export CFLAGS='-m32'
export LDFLAGS='-m32'
rpmbuild --rebuild --buildroot $TMPDIR/rpmbuild/buildroot --target i386 \
	--define "_topdir $TMPDIR/rpmbuild" $OUTDIR/files/turbovnc-[0-9]*.src.rpm \
	"${RPMARGS[@]}"
VERSION=`rpm -q -p rpmbuild/RPMS/i386/turbovnc-[0-9]*.i386.rpm | cut -f2 -d-`
mv rpmbuild/RPMS/i386/turbovnc-[0-9]*.i386.rpm $OUTDIR/files/turbovnc-$VERSION.i386.rpm
mv rpmbuild/RPMS/i386/turbovnc-debuginfo-[0-9]*.i386.rpm $OUTDIR/files/turbovnc-debuginfo-$VERSION.i386.rpm

if [ -f $SCRIPTDIR/gpgsign ]; then
	expect $SCRIPTDIR/rpmsign "$GPG_KEY_PASS" "$GPG_KEY_NAME" $OUTDIR/files/turbovnc-$VERSION.i386.rpm
	rpm --checksig $OUTDIR/files/turbovnc-$VERSION.i386.rpm
	expect $SCRIPTDIR/rpmsign "$GPG_KEY_PASS" "$GPG_KEY_NAME" $OUTDIR/files/turbovnc-debuginfo-$VERSION.i386.rpm
	rpm --checksig $OUTDIR/files/turbovnc-debuginfo-$VERSION.i386.rpm
fi

echo Creating binary DEBs ...

rm -rf rpmbuild
pushd turbovnc-[0-9]*
mkdir linux64 linux

pushd linux64
export CFLAGS=
export LDFLAGS=
cmake -G"Unix Makefiles" -DTVNC_BUILDJAVA=1 -DCMAKE_VERBOSE_MAKEFILE=1 \
	-DTVNC_INCLUDEJNIJARS=1 -DTJPEG_JNIJARDIR=/opt/libjpeg-turbo-jni \
	"${CMAKEARGS[@]}" ..
make
if [ -f ../unix/Xvnc-configure.in ]; then
	make xserver
fi
make deb
mv turbovnc_[0-9]*_amd64.deb $OUTDIR/files/
if [ -f $SCRIPTDIR/gpgsign ]; then
	expect $SCRIPTDIR/debsign "$GPG_KEY_PASS" "$GPG_KEY_ID" $OUTDIR/files/turbovnc_[0-9]*_amd64.deb
fi
popd

pushd linux
export CFLAGS='-m32'
export LDFLAGS='-m32'
cmake -G"Unix Makefiles" -DTVNC_BUILDJAVA=1 -DCMAKE_VERBOSE_MAKEFILE=1 \
	-DTVNC_INCLUDEJNIJARS=1 -DTJPEG_JNIJARDIR=/opt/libjpeg-turbo-jni \
	"${CMAKEARGS[@]}" ..
make
if [ -f ../unix/Xvnc-configure.in ]; then
	make xserver
fi
make deb
mv turbovnc_[0-9]*_i386.deb $OUTDIR/files/
if [ -f $SCRIPTDIR/gpgsign ]; then
	expect $SCRIPTDIR/debsign "$GPG_KEY_PASS" "$GPG_KEY_ID" $OUTDIR/files/turbovnc_[0-9]*_i386.deb
fi
popd

popd
